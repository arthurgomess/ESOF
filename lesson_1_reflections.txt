1)Como a visualização de um diff entre duas versões de um 
arquivo ajuda você a ver o bug que foi introduzido?
-Pois um trabalho que seria manual e cansativo em um
grande codigo se torna rapido e facil.

2)Como ter fácil acesso a todo o histórico de um arquivo 
pode torná-lo um programador mais eficiente no longo prazo?
-Pois assim se torna mais fácil achar erros, ou querer 
voltar a uma versão anterior do codigo sem grandes 
complicações.

3)Na sua opinião, quais são os prós e contras de escolher 
manualmente quando criar um commit, como ocorre no Git,
v. o salvamento automático de versões, como no Google Docs?
-Fica mais evidente e a escolha do programador, porém pode 
acontecer de esquecer e perder as alterações feitas.

4)Por que você acha que alguns sistemas de controle de 
versão, como o Git, permitem salvar vários arquivos em 
um commit, enquanto outros, como o Google Docs, tratam 
cada arquivo separadamente?
-Pois em um programa é necessario um maior controle das
versoes, em cada nova edição e atualizão.

5)Como usar os comandos git log e git diff para visualizar
o histórico dos arquivos?
-O git log lista os commits do arquivo identificados por ID,
e o git diff compara as duas versoes, mostrando algo que foi
adicionado e excluido.

6)De que modo o controle de versão pode dar a você mais 
segurança para fazer alterações que podem danificar algo?
-Pois assim se torna mais facil voltar a uma versao anterior,
permitindo que o usuario faça alteraçoes sem resentimento
de perder ou alterar drasticamente o trabalho ja feito.

7)Agora que você já configurou a sua área de trabalho, você 
quer usar o Git para quê?
Não sei, talvez fazer algo util para o dia-a-dia.
